// <auto-generated />
using System;
using Bnan_Whatsapp.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bnan_Whatsapp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bnan_Whatsapp.Core.Models.BnanWhatsappRecive", b =>
                {
                    b.Property<string>("BnanWhatsappReciveCode")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("Bnan_whatsapp_Recive_Code")
                        .IsFixedLength();

                    b.Property<string>("BnanWhatsappReciveArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bnan_whatsapp_Recive_ArName");

                    b.Property<string>("BnanWhatsappReciveCountryKey")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("Bnan_whatsapp_Recive_CountryKey");

                    b.Property<string>("BnanWhatsappReciveEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bnan_whatsapp_Recive_EnName");

                    b.Property<string>("BnanWhatsappReciveMobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Bnan_whatsapp_Recive_Mobile");

                    b.Property<string>("BnanWhatsappReciveRelationshipId")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("Bnan_whatsapp_Recive_Relationship_Id")
                        .IsFixedLength();

                    b.Property<string>("BnanWhatsappReciveRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Bnan_whatsapp_Recive_Remarks");

                    b.Property<string>("BnanWhatsappReciveSenderId")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("Bnan_whatsapp_Recive_Sender_Id")
                        .IsFixedLength();

                    b.Property<string>("BnanWhatsappReciveStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Bnan_whatsapp_Recive_Status")
                        .IsFixedLength();

                    b.HasKey("BnanWhatsappReciveCode")
                        .HasName("PK_Reciver");

                    b.HasIndex(new[] { "BnanWhatsappReciveRelationshipId" }, "IX_Recive_Relationship");

                    b.HasIndex(new[] { "BnanWhatsappReciveSenderId" }, "IX_Recive_Sender");

                    b.ToTable("Bnan_whatsapp_Recive", (string)null);
                });

            modelBuilder.Entity("Bnan_Whatsapp.Core.Models.BnanWhatsappRelationship", b =>
                {
                    b.Property<string>("BnanWhatsappRelationshipCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("Bnan_whatsapp_Relationship_Code")
                        .IsFixedLength();

                    b.Property<string>("BnanWhatsappRelationshipArName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Bnan_whatsapp_Relationship_ArName");

                    b.Property<string>("BnanWhatsappRelationshipEnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Bnan_whatsapp_Relationship_EnName");

                    b.Property<string>("BnanWhatsappRelationshipStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Bnan_whatsapp_Relationship_Status")
                        .IsFixedLength();

                    b.HasKey("BnanWhatsappRelationshipCode")
                        .HasName("PK_Relationship");

                    b.ToTable("Bnan_whatsapp_Relationship", (string)null);
                });

            modelBuilder.Entity("Bnan_Whatsapp.Core.Models.BnanWhatsappSender", b =>
                {
                    b.Property<string>("BnanWhatsappSenderCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("Bnan_whatsapp_Sender_Code")
                        .IsFixedLength();

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("BnanWhatsappSenderArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bnan_whatsapp_Sender_ArName");

                    b.Property<string>("BnanWhatsappSenderCountryKey")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("Bnan_whatsapp_Sender_CountryKey");

                    b.Property<string>("BnanWhatsappSenderEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bnan_whatsapp_Sender_Email");

                    b.Property<string>("BnanWhatsappSenderEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bnan_whatsapp_Sender_EnName");

                    b.Property<string>("BnanWhatsappSenderMobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Bnan_whatsapp_Sender_Mobile");

                    b.Property<string>("BnanWhatsappSenderPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bnan_whatsapp_Sender_Password");

                    b.Property<string>("BnanWhatsappSenderRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Bnan_whatsapp_Sender_Remarks");

                    b.Property<string>("BnanWhatsappSenderStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Bnan_whatsapp_Sender_Status")
                        .IsFixedLength();

                    b.Property<bool?>("BnanWhatsappSenderType")
                        .HasColumnType("bit")
                        .HasColumnName("Bnan_whatsapp_Sender_Type");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BnanWhatsappSenderCode");

                    b.ToTable("Bnan_whatsapp_Sender", (string)null);
                });

            modelBuilder.Entity("Bnan_Whatsapp.Core.Models.BnanWhatsappRecive", b =>
                {
                    b.HasOne("Bnan_Whatsapp.Core.Models.BnanWhatsappRelationship", "BnanWhatsappReciveRelationship")
                        .WithMany("BnanWhatsappRecives")
                        .HasForeignKey("BnanWhatsappReciveRelationshipId")
                        .HasConstraintName("FK_Recive_Relationship");

                    b.HasOne("Bnan_Whatsapp.Core.Models.BnanWhatsappSender", "BnanWhatsappReciveSender")
                        .WithMany("BnanWhatsappRecives")
                        .HasForeignKey("BnanWhatsappReciveSenderId")
                        .HasConstraintName("FK_Recive_Sender");

                    b.Navigation("BnanWhatsappReciveRelationship");

                    b.Navigation("BnanWhatsappReciveSender");
                });

            modelBuilder.Entity("Bnan_Whatsapp.Core.Models.BnanWhatsappRelationship", b =>
                {
                    b.Navigation("BnanWhatsappRecives");
                });

            modelBuilder.Entity("Bnan_Whatsapp.Core.Models.BnanWhatsappSender", b =>
                {
                    b.Navigation("BnanWhatsappRecives");
                });
#pragma warning restore 612, 618
        }
    }
}
